(()=>{"use strict";var n={81:(n,e,t)=>{t.d(e,{A:()=>c});var o=t(354),r=t.n(o),i=t(314),A=t.n(i)()(r());A.push([n.id,".dropdown {\n  position: absolute;\n  z-index: 1;\n}\n\n.block {\n  display: block;\n}\n\n.hide {\n  display: none;\n}\n","",{version:3,sources:["webpack://./src/showHideMenu.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,aAAa;AACf",sourcesContent:[".dropdown {\n  position: absolute;\n  z-index: 1;\n}\n\n.block {\n  display: block;\n}\n\n.hide {\n  display: none;\n}\n"],sourceRoot:""}]);const c=A},208:(n,e,t)=>{t.d(e,{A:()=>c});var o=t(354),r=t.n(o),i=t(314),A=t.n(i)()(r());A.push([n.id,".container {\n  display: flex;\n  flex-direction: column;\n  justify-items: stretch;\n  align-items: stretch;\n  overflow: hidden;\n}\n\n.title {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgb(183, 142, 194);\n  font-size: 60px;\n}\n\n.headernav {\n  background-color: rgb(122, 63, 121);\n  display: flex;\n}\n\nbutton {\n  font-size: 16px;\n  width: 100px;\n  border: none;\n  outline: none;\n  color: white;\n  padding: 14px 16px;\n  background-color: rgb(122, 63, 121);\n  font-family: inherit;\n  margin: 0;\n}\n\nbutton:hover,\n.leftarrow:hover,\n.rightarrow:hover {\n  background-color: rgb(229, 158, 218);\n}\n\n.links-content,\n.cats-content {\n  width: 100px;\n}\n\n.links-content {\n  background-color: rgb(122, 63, 121);\n}\n\n.cats-content {\n  background-color: rgb(122, 63, 121);\n}\n\na {\n  display: block;\n  padding: 15px;\n  text-decoration: none;\n  color: white;\n}\n\na:hover {\n  background-color: rgb(183, 142, 194);\n}\n\n.photostrip {\n  width: 5000px;\n  position: relative;\n  /* right: 450px; */\n  right: 0px;\n  height: 500px;\n  background-color: rgb(0, 0, 0);\n  display: flex;\n  padding-left: 50px;\n  padding-right: 50px;\n}\n\nimg {\n  width: 350px;\n  /* margin-left: 50px; */\n  /* margin-right: 50px; */\n  object-fit: contain;\n}\n\n.body {\n  /* position: relative; */\n\n  background-color: pink;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.frame {\n  position: relative;\n  overflow: hidden;\n  /* top: 0;\n  left: 40%; */\n  width: 450px;\n  height: 500px;\n  /* background-color: blue; */\n  display: flex;\n  /* border: 5px solid black; */\n}\n\n.leftarrow,\n.rightarrow {\n  position: absolute;\n  z-index: 1;\n  font-size: 80px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-color: rgb(122, 63, 121);\n  color: rgb(188, 163, 184);\n  width: 50px;\n  height: 500px;\n}\n\n.leftarrow {\n  margin-right: 50px;\n  top: 0px;\n  left: 0px;\n}\n\n.rightarrow {\n  margin-left: 50px;\n  top: 0px;\n  right: 0px;\n}\n\n.circle-container {\n  display: flex;\n  gap: 2px;\n  height: 50px;\n  align-items: center;\n  justify-content: center;\n}\n\n.fillcircle {\n  background: white;\n}\n\n.circle {\n  border-radius: 20px;\n  height: 10px;\n  width: 10px;\n  border: 3px solid white;\n}\n\n/* .framediv {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: pink;\n  width: 100%;\n  height: 500px;\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\n.frame {\n  height: 500px;\n  background-color: rgb(193, 169, 173);\n  position: absolute;\n  z-index: 1;\n} */\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,sBAAsB;EACtB,sBAAsB;EACtB,oBAAoB;EACpB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,oCAAoC;EACpC,eAAe;AACjB;;AAEA;EACE,mCAAmC;EACnC,aAAa;AACf;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,YAAY;EACZ,aAAa;EACb,YAAY;EACZ,kBAAkB;EAClB,mCAAmC;EACnC,oBAAoB;EACpB,SAAS;AACX;;AAEA;;;EAGE,oCAAoC;AACtC;;AAEA;;EAEE,YAAY;AACd;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,cAAc;EACd,aAAa;EACb,qBAAqB;EACrB,YAAY;AACd;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,kBAAkB;EAClB,UAAU;EACV,aAAa;EACb,8BAA8B;EAC9B,aAAa;EACb,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,uBAAuB;EACvB,wBAAwB;EACxB,mBAAmB;AACrB;;AAEA;EACE,wBAAwB;;EAExB,sBAAsB;EACtB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB;cACY;EACZ,YAAY;EACZ,aAAa;EACb,4BAA4B;EAC5B,aAAa;EACb,6BAA6B;AAC/B;;AAEA;;EAEE,kBAAkB;EAClB,UAAU;EACV,eAAe;EACf,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mCAAmC;EACnC,yBAAyB;EACzB,WAAW;EACX,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,SAAS;AACX;;AAEA;EACE,iBAAiB;EACjB,QAAQ;EACR,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,QAAQ;EACR,YAAY;EACZ,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,mBAAmB;EACnB,YAAY;EACZ,WAAW;EACX,uBAAuB;AACzB;;AAEA;;;;;;;;;;;;;;;;;;GAkBG",sourcesContent:[".container {\n  display: flex;\n  flex-direction: column;\n  justify-items: stretch;\n  align-items: stretch;\n  overflow: hidden;\n}\n\n.title {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgb(183, 142, 194);\n  font-size: 60px;\n}\n\n.headernav {\n  background-color: rgb(122, 63, 121);\n  display: flex;\n}\n\nbutton {\n  font-size: 16px;\n  width: 100px;\n  border: none;\n  outline: none;\n  color: white;\n  padding: 14px 16px;\n  background-color: rgb(122, 63, 121);\n  font-family: inherit;\n  margin: 0;\n}\n\nbutton:hover,\n.leftarrow:hover,\n.rightarrow:hover {\n  background-color: rgb(229, 158, 218);\n}\n\n.links-content,\n.cats-content {\n  width: 100px;\n}\n\n.links-content {\n  background-color: rgb(122, 63, 121);\n}\n\n.cats-content {\n  background-color: rgb(122, 63, 121);\n}\n\na {\n  display: block;\n  padding: 15px;\n  text-decoration: none;\n  color: white;\n}\n\na:hover {\n  background-color: rgb(183, 142, 194);\n}\n\n.photostrip {\n  width: 5000px;\n  position: relative;\n  /* right: 450px; */\n  right: 0px;\n  height: 500px;\n  background-color: rgb(0, 0, 0);\n  display: flex;\n  padding-left: 50px;\n  padding-right: 50px;\n}\n\nimg {\n  width: 350px;\n  /* margin-left: 50px; */\n  /* margin-right: 50px; */\n  object-fit: contain;\n}\n\n.body {\n  /* position: relative; */\n\n  background-color: pink;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.frame {\n  position: relative;\n  overflow: hidden;\n  /* top: 0;\n  left: 40%; */\n  width: 450px;\n  height: 500px;\n  /* background-color: blue; */\n  display: flex;\n  /* border: 5px solid black; */\n}\n\n.leftarrow,\n.rightarrow {\n  position: absolute;\n  z-index: 1;\n  font-size: 80px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-color: rgb(122, 63, 121);\n  color: rgb(188, 163, 184);\n  width: 50px;\n  height: 500px;\n}\n\n.leftarrow {\n  margin-right: 50px;\n  top: 0px;\n  left: 0px;\n}\n\n.rightarrow {\n  margin-left: 50px;\n  top: 0px;\n  right: 0px;\n}\n\n.circle-container {\n  display: flex;\n  gap: 2px;\n  height: 50px;\n  align-items: center;\n  justify-content: center;\n}\n\n.fillcircle {\n  background: white;\n}\n\n.circle {\n  border-radius: 20px;\n  height: 10px;\n  width: 10px;\n  border: 3px solid white;\n}\n\n/* .framediv {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: pink;\n  width: 100%;\n  height: 500px;\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\n.frame {\n  height: 500px;\n  background-color: rgb(193, 169, 173);\n  position: absolute;\n  z-index: 1;\n} */\n"],sourceRoot:""}]);const c=A},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(o)for(var c=0;c<this.length;c++){var a=this[c][0];null!=a&&(A[a]=!0)}for(var l=0;l<n.length;l++){var s=[].concat(n[l]);o&&A[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),e.push(s))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},A=[],c=0;c<n.length;c++){var a=n[c],l=o.base?a[0]+o.base:a[0],s=i[l]||0,p="".concat(l," ").concat(s);i[l]=s+1;var d=t(p),u={css:a[1],media:a[2],sourceMap:a[3],supports:a[4],layer:a[5]};if(-1!==d)e[d].references++,e[d].updater(u);else{var f=r(u,o);o.byIndex=c,e.splice(c,0,{identifier:p,updater:f,references:1})}A.push(p)}return A}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var A=0;A<i.length;A++){var c=t(i[A]);e[c].references--}for(var a=o(n,r),l=0;l<i.length;l++){var s=t(i[l]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}i=a}}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&(!n||!/^http(s?):/.test(n));)n=o[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(72),e=t.n(n),o=t(825),r=t.n(o),i=t(659),A=t.n(i),c=t(56),a=t.n(c),l=t(540),s=t.n(l),p=t(113),d=t.n(p),u=t(208),f={};f.styleTagTransform=d(),f.setAttributes=a(),f.insert=A().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=s(),e()(u.A,f),u.A&&u.A.locals&&u.A.locals;var g=t(81),b={};function h(n){const e=document.querySelector(n),t=document.querySelector(`${n}>div`);t.classList.add("hide"),t.classList.add("dropdown"),e.addEventListener("mouseover",(()=>{t.classList.remove("hide"),t.classList.add("block"),e.addEventListener("mouseout",(()=>{t.classList.remove("block"),t.classList.add("hide")}))}))}function E(n){let e=document.querySelector(".photostrip");const t=window.getComputedStyle(e);let o=Number(t.getPropertyValue("right").replace("px",""));0==o&&-1==n?o=1750:1750==o&&1==n?o=0:o+=350*n;let r=`${o}px`;e.style.right=r,console.log(o),m(o)}function C(n){const e=350*n;let t=`${e}px`;document.querySelector(".photostrip").style.right=t,m(e)}function m(n){let e=0;0!==n&&(e=n/350),console.log(`slidenumber ${e}`);const t=document.querySelectorAll(".circle");t.forEach((n=>{n.classList.remove("fillcircle")})),t[e].classList.add("fillcircle")}b.styleTagTransform=d(),b.setAttributes=a(),b.insert=A().bind(null,"head"),b.domAPI=r(),b.insertStyleElement=s(),e()(g.A,b),g.A&&g.A.locals&&g.A.locals;const x=[t.p+"9d55c2d456b6a0b598d2.jpg",t.p+"effc2f1c578d1de39f3a.jpg",t.p+"9806148da8cb11bb1225.jpg",t.p+"8dba01fafebb5062460d.jpg",t.p+"655e35d7f79b4fd3e295.jpg",t.p+"046b1da41d1385111160.jpg"],B=[x,[t.p+"f40d99a88b3b3a46659a.jpeg",t.p+"df3130987bdcb761aec4.jpeg",t.p+"0bfb886157a63802ddf6.jpeg",t.p+"55301e2bbf82ccf431db.jpeg",t.p+"a79209e895d824fc157f.jpeg",t.p+"59efdef64b62868f589b.jpeg"],[t.p+"b852cdb2c60b5a4c54cd.jpeg",t.p+"4a68fbaf07432382019f.jpeg",t.p+"1c6a7978a7853c1cc5c4.jpeg",t.p+"ef059033dead00c217b3.jpeg",t.p+"8466023710d64226e110.jpeg",t.p+"9129835be28b758c1122.jpeg"]];function v(n,e){const t=document.querySelectorAll(`${n} > img`);for(let n=0;n<t.length;n++)t[n].src=e[n]}h(".cats"),h(".links"),m(0),v(".photostrip",x),setInterval((()=>E(1)),5e3),document.querySelector(".rightarrow").addEventListener("click",(()=>{E(1)})),document.querySelector(".leftarrow").addEventListener("click",(()=>{E(-1)}));const y=document.querySelectorAll(".circle");for(let n=0;n<y.length;n++)y[n].addEventListener("click",(()=>C(n)));const k=document.querySelectorAll(".cat-link");for(let n=0;n<k.length;n++)console.log(`all cats is ${B[n][n]}`),k[n].addEventListener("click",(()=>{console.log(`${k[n].textContent} was clicked on`),v(".photostrip",B[n])}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,